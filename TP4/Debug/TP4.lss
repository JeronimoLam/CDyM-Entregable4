
TP4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000055e  000005f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800104  00800104  000005f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000628  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00000668  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001277  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a46  00000000  00000000  00001a8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bb1  00000000  00000000  000024d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000334  00000000  00000000  00003088  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000700  00000000  00000000  000033bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004aa  00000000  00000000  00003abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00003f66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 7e 02 	jmp	0x4fc	; 0x4fc <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 32       	cpi	r26, 0x2D	; 45
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <main>
  9e:	0c 94 ad 02 	jmp	0x55a	; 0x55a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LDR_config>:
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  ac:	87 e8       	ldi	r24, 0x87	; 135
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b2:	ec e7       	ldi	r30, 0x7C	; 124
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	80 64       	ori	r24, 0x40	; 64
  ba:	80 83       	st	Z, r24
  bc:	08 95       	ret

000000be <distributeValues>:
  be:	cf 93       	push	r28
  c0:	5d ec       	ldi	r21, 0xCD	; 205
  c2:	85 9f       	mul	r24, r21
  c4:	a1 2d       	mov	r26, r1
  c6:	11 24       	eor	r1, r1
  c8:	a6 95       	lsr	r26
  ca:	a6 95       	lsr	r26
  cc:	a6 95       	lsr	r26
  ce:	2a 2f       	mov	r18, r26
  d0:	22 0f       	add	r18, r18
  d2:	92 2f       	mov	r25, r18
  d4:	99 0f       	add	r25, r25
  d6:	99 0f       	add	r25, r25
  d8:	92 0f       	add	r25, r18
  da:	c8 2f       	mov	r28, r24
  dc:	c9 1b       	sub	r28, r25
  de:	65 9f       	mul	r22, r21
  e0:	71 2d       	mov	r23, r1
  e2:	11 24       	eor	r1, r1
  e4:	76 95       	lsr	r23
  e6:	76 95       	lsr	r23
  e8:	76 95       	lsr	r23
  ea:	97 2f       	mov	r25, r23
  ec:	99 0f       	add	r25, r25
  ee:	89 2f       	mov	r24, r25
  f0:	88 0f       	add	r24, r24
  f2:	88 0f       	add	r24, r24
  f4:	89 0f       	add	r24, r25
  f6:	b6 2f       	mov	r27, r22
  f8:	b8 1b       	sub	r27, r24
  fa:	45 9f       	mul	r20, r21
  fc:	51 2d       	mov	r21, r1
  fe:	11 24       	eor	r1, r1
 100:	56 95       	lsr	r21
 102:	56 95       	lsr	r21
 104:	56 95       	lsr	r21
 106:	95 2f       	mov	r25, r21
 108:	99 0f       	add	r25, r25
 10a:	89 2f       	mov	r24, r25
 10c:	88 0f       	add	r24, r24
 10e:	88 0f       	add	r24, r24
 110:	89 0f       	add	r24, r25
 112:	64 2f       	mov	r22, r20
 114:	68 1b       	sub	r22, r24
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	21 c0       	rjmp	.+66     	; 0x15c <distributeValues+0x9e>
 11a:	28 2f       	mov	r18, r24
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	8c 17       	cp	r24, r28
 120:	18 f4       	brcc	.+6      	; 0x128 <distributeValues+0x6a>
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	9a 0f       	add	r25, r26
 126:	01 c0       	rjmp	.+2      	; 0x12a <distributeValues+0x6c>
 128:	9a 2f       	mov	r25, r26
 12a:	f9 01       	movw	r30, r18
 12c:	e8 5e       	subi	r30, 0xE8	; 232
 12e:	fe 4f       	sbci	r31, 0xFE	; 254
 130:	90 83       	st	Z, r25
 132:	8b 17       	cp	r24, r27
 134:	18 f4       	brcc	.+6      	; 0x13c <distributeValues+0x7e>
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	97 0f       	add	r25, r23
 13a:	01 c0       	rjmp	.+2      	; 0x13e <distributeValues+0x80>
 13c:	97 2f       	mov	r25, r23
 13e:	f9 01       	movw	r30, r18
 140:	e2 5f       	subi	r30, 0xF2	; 242
 142:	fe 4f       	sbci	r31, 0xFE	; 254
 144:	90 83       	st	Z, r25
 146:	86 17       	cp	r24, r22
 148:	18 f4       	brcc	.+6      	; 0x150 <distributeValues+0x92>
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	95 0f       	add	r25, r21
 14e:	01 c0       	rjmp	.+2      	; 0x152 <distributeValues+0x94>
 150:	95 2f       	mov	r25, r21
 152:	f9 01       	movw	r30, r18
 154:	ec 5f       	subi	r30, 0xFC	; 252
 156:	fe 4f       	sbci	r31, 0xFE	; 254
 158:	90 83       	st	Z, r25
 15a:	8f 5f       	subi	r24, 0xFF	; 255
 15c:	8a 30       	cpi	r24, 0x0A	; 10
 15e:	e8 f2       	brcs	.-70     	; 0x11a <distributeValues+0x5c>
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <LEDS_setRed>:
 164:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <red>
 168:	08 95       	ret

0000016a <LEDS_setGreen>:
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	28 1b       	sub	r18, r24
 170:	31 09       	sbc	r19, r1
 172:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 176:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 17a:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <green>
 17e:	08 95       	ret

00000180 <LEDS_setBlue>:
 180:	2f ef       	ldi	r18, 0xFF	; 255
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	28 1b       	sub	r18, r24
 186:	31 09       	sbc	r19, r1
 188:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 18c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 190:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <blue>
 194:	08 95       	ret

00000196 <LEDS_init>:
 196:	84 b1       	in	r24, 0x04	; 4
 198:	86 62       	ori	r24, 0x26	; 38
 19a:	84 b9       	out	0x04, r24	; 4
 19c:	85 b1       	in	r24, 0x05	; 5
 19e:	80 62       	ori	r24, 0x20	; 32
 1a0:	85 b9       	out	0x05, r24	; 5
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	0e 94 b2 00 	call	0x164	; 0x164 <LEDS_setRed>
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	0e 94 b5 00 	call	0x16a	; 0x16a <LEDS_setGreen>
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	0e 94 c0 00 	call	0x180	; 0x180 <LEDS_setBlue>
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	0f c0       	rjmp	.+30     	; 0x1d6 <LEDS_init+0x40>
 1b8:	82 2f       	mov	r24, r18
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	fc 01       	movw	r30, r24
 1be:	e8 5e       	subi	r30, 0xE8	; 232
 1c0:	fe 4f       	sbci	r31, 0xFE	; 254
 1c2:	10 82       	st	Z, r1
 1c4:	fc 01       	movw	r30, r24
 1c6:	e2 5f       	subi	r30, 0xF2	; 242
 1c8:	fe 4f       	sbci	r31, 0xFE	; 254
 1ca:	10 82       	st	Z, r1
 1cc:	fc 01       	movw	r30, r24
 1ce:	ec 5f       	subi	r30, 0xFC	; 252
 1d0:	fe 4f       	sbci	r31, 0xFE	; 254
 1d2:	10 82       	st	Z, r1
 1d4:	2f 5f       	subi	r18, 0xFF	; 255
 1d6:	2a 30       	cpi	r18, 0x0A	; 10
 1d8:	78 f3       	brcs	.-34     	; 0x1b8 <LEDS_init+0x22>
 1da:	08 95       	ret

000001dc <LEDS_getRed>:
 1dc:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <red>
 1e0:	08 95       	ret

000001e2 <LEDS_getGreen>:
 1e2:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <green>
 1e6:	08 95       	ret

000001e8 <LEDS_getBlue>:
 1e8:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <blue>
 1ec:	08 95       	ret

000001ee <LEDS_getFinalRed>:
 1ee:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <final_red>
 1f2:	08 95       	ret

000001f4 <LEDS_getFinalGreen>:
 1f4:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <final_green>
 1f8:	08 95       	ret

000001fa <LEDS_getFinalBlue>:
 1fa:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <final_blue>
 1fe:	08 95       	ret

00000200 <LEDS_setFinalRGB>:
 200:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <final_red>
 204:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <final_green>
 208:	40 93 25 01 	sts	0x0125, r20	; 0x800125 <final_blue>
 20c:	0e 94 5f 00 	call	0xbe	; 0xbe <distributeValues>
 210:	08 95       	ret

00000212 <LEDS_incrementRed>:
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	ec 01       	movw	r28, r24
 218:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LEDS_getRed>
 21c:	c8 5e       	subi	r28, 0xE8	; 232
 21e:	de 4f       	sbci	r29, 0xFE	; 254
 220:	98 81       	ld	r25, Y
 222:	89 0f       	add	r24, r25
 224:	0e 94 b2 00 	call	0x164	; 0x164 <LEDS_setRed>
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <LEDS_incrementGreen>:
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	ec 01       	movw	r28, r24
 234:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LEDS_getGreen>
 238:	c2 5f       	subi	r28, 0xF2	; 242
 23a:	de 4f       	sbci	r29, 0xFE	; 254
 23c:	98 81       	ld	r25, Y
 23e:	89 0f       	add	r24, r25
 240:	0e 94 b5 00 	call	0x16a	; 0x16a <LEDS_setGreen>
 244:	df 91       	pop	r29
 246:	cf 91       	pop	r28
 248:	08 95       	ret

0000024a <LEDS_incrementBlue>:
 24a:	cf 93       	push	r28
 24c:	df 93       	push	r29
 24e:	ec 01       	movw	r28, r24
 250:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LEDS_getBlue>
 254:	cc 5f       	subi	r28, 0xFC	; 252
 256:	de 4f       	sbci	r29, 0xFE	; 254
 258:	98 81       	ld	r25, Y
 25a:	89 0f       	add	r24, r25
 25c:	0e 94 c0 00 	call	0x180	; 0x180 <LEDS_setBlue>
 260:	df 91       	pop	r29
 262:	cf 91       	pop	r28
 264:	08 95       	ret

00000266 <LEDS_decrementRed>:
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	ec 01       	movw	r28, r24
 26c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LEDS_getRed>
 270:	e9 e0       	ldi	r30, 0x09	; 9
 272:	f0 e0       	ldi	r31, 0x00	; 0
 274:	ec 1b       	sub	r30, r28
 276:	fd 0b       	sbc	r31, r29
 278:	e8 5e       	subi	r30, 0xE8	; 232
 27a:	fe 4f       	sbci	r31, 0xFE	; 254
 27c:	90 81       	ld	r25, Z
 27e:	89 1b       	sub	r24, r25
 280:	0e 94 b2 00 	call	0x164	; 0x164 <LEDS_setRed>
 284:	df 91       	pop	r29
 286:	cf 91       	pop	r28
 288:	08 95       	ret

0000028a <LEDS_decrementGreen>:
 28a:	cf 93       	push	r28
 28c:	df 93       	push	r29
 28e:	ec 01       	movw	r28, r24
 290:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LEDS_getGreen>
 294:	e9 e0       	ldi	r30, 0x09	; 9
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	ec 1b       	sub	r30, r28
 29a:	fd 0b       	sbc	r31, r29
 29c:	e2 5f       	subi	r30, 0xF2	; 242
 29e:	fe 4f       	sbci	r31, 0xFE	; 254
 2a0:	90 81       	ld	r25, Z
 2a2:	89 1b       	sub	r24, r25
 2a4:	0e 94 b5 00 	call	0x16a	; 0x16a <LEDS_setGreen>
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	08 95       	ret

000002ae <LEDS_decrementBlue>:
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	ec 01       	movw	r28, r24
 2b4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LEDS_getBlue>
 2b8:	e9 e0       	ldi	r30, 0x09	; 9
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	ec 1b       	sub	r30, r28
 2be:	fd 0b       	sbc	r31, r29
 2c0:	ec 5f       	subi	r30, 0xFC	; 252
 2c2:	fe 4f       	sbci	r31, 0xFE	; 254
 2c4:	90 81       	ld	r25, Z
 2c6:	89 1b       	sub	r24, r25
 2c8:	0e 94 c0 00 	call	0x180	; 0x180 <LEDS_setBlue>
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <main>:
 2d2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <TIMERS_InitTimer0>
 2d6:	0e 94 a2 02 	call	0x544	; 0x544 <TIMERS_InitTimer1>
 2da:	0e 94 cb 00 	call	0x196	; 0x196 <LEDS_init>
 2de:	0e 94 84 01 	call	0x308	; 0x308 <MEF_init>
 2e2:	4f ef       	ldi	r20, 0xFF	; 255
 2e4:	6f ef       	ldi	r22, 0xFF	; 255
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	0e 94 00 01 	call	0x200	; 0x200 <LEDS_setFinalRGB>
 2ec:	0e 94 53 00 	call	0xa6	; 0xa6 <LDR_config>
 2f0:	84 b1       	in	r24, 0x04	; 4
 2f2:	80 61       	ori	r24, 0x10	; 16
 2f4:	84 b9       	out	0x04, r24	; 4
 2f6:	85 b1       	in	r24, 0x05	; 5
 2f8:	8f 7e       	andi	r24, 0xEF	; 239
 2fa:	85 b9       	out	0x05, r24	; 5
 2fc:	78 94       	sei
 2fe:	0e 94 31 02 	call	0x462	; 0x462 <sEOS_Dispatch_Tasks>
 302:	0e 94 65 02 	call	0x4ca	; 0x4ca <sEOS_Go_To_Sleep>
 306:	fb cf       	rjmp	.-10     	; 0x2fe <main+0x2c>

00000308 <MEF_init>:
static states state;
static uint16_t stateCount;
static uint16_t timeOff = 20;

void MEF_init(){
	state = OFF;
 308:	83 e0       	ldi	r24, 0x03	; 3
 30a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <state>
	stateCount = 0;
 30e:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <stateCount+0x1>
 312:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <stateCount>
 316:	08 95       	ret

00000318 <MEF_Update>:
}

void MEF_Update(){
	stateCount++;
 318:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 31c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 320:	01 96       	adiw	r24, 0x01	; 1
 322:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <stateCount+0x1>
 326:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <stateCount>
	
	switch (state){
 32a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <state>
 32e:	81 30       	cpi	r24, 0x01	; 1
 330:	09 f4       	brne	.+2      	; 0x334 <MEF_Update+0x1c>
 332:	48 c0       	rjmp	.+144    	; 0x3c4 <MEF_Update+0xac>
 334:	00 f1       	brcs	.+64     	; 0x376 <MEF_Update+0x5e>
 336:	82 30       	cpi	r24, 0x02	; 2
 338:	09 f4       	brne	.+2      	; 0x33c <MEF_Update+0x24>
 33a:	61 c0       	rjmp	.+194    	; 0x3fe <MEF_Update+0xe6>
 33c:	83 30       	cpi	r24, 0x03	; 3
 33e:	09 f0       	breq	.+2      	; 0x342 <MEF_Update+0x2a>
 340:	8f c0       	rjmp	.+286    	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
		case OFF:
			PORTB |= (1<<PORTB4);
 342:	85 b1       	in	r24, 0x05	; 5
 344:	80 61       	ori	r24, 0x10	; 16
 346:	85 b9       	out	0x05, r24	; 5
			
			LEDS_setRed(0);
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	0e 94 b2 00 	call	0x164	; 0x164 <LEDS_setRed>
			LEDS_setGreen(0);
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 b5 00 	call	0x16a	; 0x16a <LEDS_setGreen>
			LEDS_setBlue(0);
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	0e 94 c0 00 	call	0x180	; 0x180 <LEDS_setBlue>
			
			//timeOff = (LDR_get_value() > 200) ? 100 : 40;
			if(stateCount == timeOff){
 35a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 35e:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 362:	44 97       	sbiw	r24, 0x14	; 20
 364:	09 f0       	breq	.+2      	; 0x368 <MEF_Update+0x50>
 366:	7c c0       	rjmp	.+248    	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
				state = RAISING;
 368:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <state>
				stateCount = 0;
 36c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <stateCount+0x1>
 370:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <stateCount>
 374:	08 95       	ret
			}
			break;
			
		case RAISING:
			PORTB |= (1<<PORTB4);
 376:	85 b1       	in	r24, 0x05	; 5
 378:	80 61       	ori	r24, 0x10	; 16
 37a:	85 b9       	out	0x05, r24	; 5
			
			LEDS_incrementRed(stateCount - 1);
 37c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 380:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	0e 94 09 01 	call	0x212	; 0x212 <LEDS_incrementRed>
			LEDS_incrementGreen(stateCount - 1);
 38a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 38e:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	0e 94 17 01 	call	0x22e	; 0x22e <LEDS_incrementGreen>
			LEDS_incrementBlue(stateCount - 1);
 398:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 39c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	0e 94 25 01 	call	0x24a	; 0x24a <LEDS_incrementBlue>
			
			if(stateCount == 10){
 3a6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 3aa:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 3ae:	0a 97       	sbiw	r24, 0x0a	; 10
 3b0:	09 f0       	breq	.+2      	; 0x3b4 <MEF_Update+0x9c>
 3b2:	56 c0       	rjmp	.+172    	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
				state = ON;
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <state>
				stateCount = 0;
 3ba:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <stateCount+0x1>
 3be:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <stateCount>
 3c2:	08 95       	ret
			}
			break;
			
		case ON:
			PORTB &= ~(1<<PORTB4);
 3c4:	85 b1       	in	r24, 0x05	; 5
 3c6:	8f 7e       	andi	r24, 0xEF	; 239
 3c8:	85 b9       	out	0x05, r24	; 5

			
			LEDS_setRed(LEDS_getFinalRed());
 3ca:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LEDS_getFinalRed>
 3ce:	0e 94 b2 00 	call	0x164	; 0x164 <LEDS_setRed>
			LEDS_setGreen(LEDS_getFinalGreen());
 3d2:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LEDS_getFinalGreen>
 3d6:	0e 94 b5 00 	call	0x16a	; 0x16a <LEDS_setGreen>
			LEDS_setBlue(LEDS_getFinalBlue());
 3da:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LEDS_getFinalBlue>
 3de:	0e 94 c0 00 	call	0x180	; 0x180 <LEDS_setBlue>
			
			if(stateCount == 20){
 3e2:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 3e6:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 3ea:	44 97       	sbiw	r24, 0x14	; 20
 3ec:	c9 f5       	brne	.+114    	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
				state = FALLING;
 3ee:	82 e0       	ldi	r24, 0x02	; 2
 3f0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <state>
				stateCount = 0;
 3f4:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <stateCount+0x1>
 3f8:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <stateCount>
 3fc:	08 95       	ret
			}
			break;
			
		case FALLING:
			PORTB |= (1<<PORTB4);
 3fe:	85 b1       	in	r24, 0x05	; 5
 400:	80 61       	ori	r24, 0x10	; 16
 402:	85 b9       	out	0x05, r24	; 5
			
			if (LEDS_getFinalRed() != 0) LEDS_decrementRed(stateCount - 1);
 404:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LEDS_getFinalRed>
 408:	88 23       	and	r24, r24
 40a:	39 f0       	breq	.+14     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 40c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 410:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 414:	01 97       	sbiw	r24, 0x01	; 1
 416:	0e 94 33 01 	call	0x266	; 0x266 <LEDS_decrementRed>
			if (LEDS_getFinalGreen() != 0) LEDS_decrementGreen(stateCount - 1);
 41a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LEDS_getFinalGreen>
 41e:	88 23       	and	r24, r24
 420:	39 f0       	breq	.+14     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 422:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 426:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	0e 94 45 01 	call	0x28a	; 0x28a <LEDS_decrementGreen>
			if (LEDS_getFinalBlue() != 0) LEDS_decrementBlue(stateCount - 1);
 430:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LEDS_getFinalBlue>
 434:	88 23       	and	r24, r24
 436:	39 f0       	breq	.+14     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 438:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 43c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	0e 94 57 01 	call	0x2ae	; 0x2ae <LEDS_decrementBlue>
			
			if(stateCount == 10){
 446:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <stateCount>
 44a:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <stateCount+0x1>
 44e:	0a 97       	sbiw	r24, 0x0a	; 10
 450:	39 f4       	brne	.+14     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
				state = OFF;
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <state>
				stateCount = 0;
 458:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <stateCount+0x1>
 45c:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <stateCount>
 460:	08 95       	ret

00000462 <sEOS_Dispatch_Tasks>:
 462:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <FLAG_MEF>
 466:	88 23       	and	r24, r24
 468:	29 f0       	breq	.+10     	; 0x474 <sEOS_Dispatch_Tasks+0x12>
 46a:	0e 94 8c 01 	call	0x318	; 0x318 <MEF_Update>
 46e:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <FLAG_MEF>
 472:	08 95       	ret
 474:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <FLAG_LDR>
 478:	81 11       	cpse	r24, r1
 47a:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <FLAG_LDR>
 47e:	08 95       	ret

00000480 <sEOS_SCH_Tasks>:
 480:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <counter_MEF>
 484:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <counter_MEF+0x1>
 488:	01 96       	adiw	r24, 0x01	; 1
 48a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <counter_MEF+0x1>
 48e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <counter_MEF>
 492:	c2 97       	sbiw	r24, 0x32	; 50
 494:	39 f4       	brne	.+14     	; 0x4a4 <sEOS_SCH_Tasks+0x24>
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <FLAG_MEF>
 49c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <counter_MEF+0x1>
 4a0:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <counter_MEF>
 4a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4a8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4ac:	01 96       	adiw	r24, 0x01	; 1
 4ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 4b6:	0a 97       	sbiw	r24, 0x0a	; 10
 4b8:	39 f4       	brne	.+14     	; 0x4c8 <sEOS_SCH_Tasks+0x48>
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <FLAG_LDR>
 4c0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4c4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 4c8:	08 95       	ret

000004ca <sEOS_Go_To_Sleep>:
 4ca:	83 b7       	in	r24, 0x33	; 51
 4cc:	81 7f       	andi	r24, 0xF1	; 241
 4ce:	83 bf       	out	0x33, r24	; 51
 4d0:	83 b7       	in	r24, 0x33	; 51
 4d2:	81 60       	ori	r24, 0x01	; 1
 4d4:	83 bf       	out	0x33, r24	; 51
 4d6:	88 95       	sleep
 4d8:	83 b7       	in	r24, 0x33	; 51
 4da:	8e 7f       	andi	r24, 0xFE	; 254
 4dc:	83 bf       	out	0x33, r24	; 51
 4de:	08 95       	ret

000004e0 <TIMERS_InitTimer0>:
 4e0:	84 b5       	in	r24, 0x24	; 36
 4e2:	82 60       	ori	r24, 0x02	; 2
 4e4:	84 bd       	out	0x24, r24	; 36
 4e6:	85 b5       	in	r24, 0x25	; 37
 4e8:	83 60       	ori	r24, 0x03	; 3
 4ea:	85 bd       	out	0x25, r24	; 37
 4ec:	ee e6       	ldi	r30, 0x6E	; 110
 4ee:	f0 e0       	ldi	r31, 0x00	; 0
 4f0:	80 81       	ld	r24, Z
 4f2:	82 60       	ori	r24, 0x02	; 2
 4f4:	80 83       	st	Z, r24
 4f6:	89 ef       	ldi	r24, 0xF9	; 249
 4f8:	87 bd       	out	0x27, r24	; 39
 4fa:	08 95       	ret

000004fc <__vector_14>:
 4fc:	1f 92       	push	r1
 4fe:	0f 92       	push	r0
 500:	0f b6       	in	r0, 0x3f	; 63
 502:	0f 92       	push	r0
 504:	11 24       	eor	r1, r1
 506:	2f 93       	push	r18
 508:	3f 93       	push	r19
 50a:	4f 93       	push	r20
 50c:	5f 93       	push	r21
 50e:	6f 93       	push	r22
 510:	7f 93       	push	r23
 512:	8f 93       	push	r24
 514:	9f 93       	push	r25
 516:	af 93       	push	r26
 518:	bf 93       	push	r27
 51a:	ef 93       	push	r30
 51c:	ff 93       	push	r31
 51e:	0e 94 40 02 	call	0x480	; 0x480 <sEOS_SCH_Tasks>
 522:	ff 91       	pop	r31
 524:	ef 91       	pop	r30
 526:	bf 91       	pop	r27
 528:	af 91       	pop	r26
 52a:	9f 91       	pop	r25
 52c:	8f 91       	pop	r24
 52e:	7f 91       	pop	r23
 530:	6f 91       	pop	r22
 532:	5f 91       	pop	r21
 534:	4f 91       	pop	r20
 536:	3f 91       	pop	r19
 538:	2f 91       	pop	r18
 53a:	0f 90       	pop	r0
 53c:	0f be       	out	0x3f, r0	; 63
 53e:	0f 90       	pop	r0
 540:	1f 90       	pop	r1
 542:	18 95       	reti

00000544 <TIMERS_InitTimer1>:
 544:	e0 e8       	ldi	r30, 0x80	; 128
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	80 81       	ld	r24, Z
 54a:	81 6a       	ori	r24, 0xA1	; 161
 54c:	80 83       	st	Z, r24
 54e:	e1 e8       	ldi	r30, 0x81	; 129
 550:	f0 e0       	ldi	r31, 0x00	; 0
 552:	80 81       	ld	r24, Z
 554:	8c 60       	ori	r24, 0x0C	; 12
 556:	80 83       	st	Z, r24
 558:	08 95       	ret

0000055a <_exit>:
 55a:	f8 94       	cli

0000055c <__stop_program>:
 55c:	ff cf       	rjmp	.-2      	; 0x55c <__stop_program>
